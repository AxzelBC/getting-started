# ----------- ENVIRONMENT VARIABLES -----------
x-backend_env_variables: &backend_env_variables
  ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
  FRONTEND_HOST: ${FRONTEND_HOST}
  FLASK_APP: app.py
  FLASK_ENV: ${FLASK_ENV}
  FLASK_RUN_PORT: ${BACKEND_PORT_FLASK}
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: archihub-${ENVIRONMENT_NAME}
  MONGO_DATABASE: archihub-${ENVIRONMENT_NAME}
  CELERY_BROKER_URL: ${CELERY_BROKER_URL}
  CELERY_BROKER_HOST: ${CELERY_BROKER_HOST}
  FLASK_DEBUG: ${FLASK_DEBUG}
  USER_FILES_PATH: ${USER_FILES_PATH}
  WEB_FILES_PATH: ${WEB_FILES_PATH}
  ORIGINAL_FILES_PATH: ${ORIGINAL_FILES_PATH}
  TEMPORAL_FILES_PATH: ${TEMPORAL_FILES_PATH}
  MONGO_IP_SERVER: ${MONGO_HOST}
  MONGO_HOST: ${MONGO_HOST}
  MONGO_PORT: '27017'
  ELASTIC_DOMAIN: ${ELASTIC_DOMAIN}
  ELASTIC_USER: ${ELASTIC_USER}
  ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  ELASTIC_PORT: ${ELASTIC_PORT}
  ELASTIC_INDEX_PREFIX: archihub-${ENVIRONMENT_NAME}
  HF_TOKEN: ${HF_TOKEN}
  REDIRECT_URL: ${REDIRECT_URL}
# --------------------------------------------
x-worker_env_variables: &worker_env_variables
  ENVIRONMENT_NAME: ${ENVIRONMENT_NAME}
  FRONTEND_HOST: ${FRONTEND_HOST}
  FLASK_APP: app.py
  FLASK_ENV: ${FLASK_ENV}
  FLASK_RUN_PORT: ${BACKEND_PORT_FLASK}
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: archihub-${ENVIRONMENT_NAME}
  MONGO_DATABASE: archihub-${ENVIRONMENT_NAME}
  CELERY_BROKER_URL: ${CELERY_BROKER_URL}
  CELERY_BROKER_HOST: ${CELERY_BROKER_HOST}
  FLASK_DEBUG: ${FLASK_DEBUG}
  USER_FILES_PATH: ${USER_FILES_PATH}
  WEB_FILES_PATH: ${WEB_FILES_PATH}
  ORIGINAL_FILES_PATH: ${ORIGINAL_FILES_PATH}
  TEMPORAL_FILES_PATH: ${TEMPORAL_FILES_PATH}
  MONGO_IP_SERVER: ${MONGO_HOST}
  MONGO_HOST: ${MONGO_HOST}
  MONGO_PORT: '27017'
  CELERY_WORKER: true
  ELASTIC_DOMAIN: ${ELASTIC_DOMAIN}
  ELASTIC_USER: ${ELASTIC_USER}
  ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  ELASTIC_PORT: ${ELASTIC_PORT}
  ELASTIC_INDEX_PREFIX: archihub-${ENVIRONMENT_NAME}
  HF_TOKEN: ${HF_TOKEN}
# --------------------------------------------
x-mongo_db_env_variables: &mongo_db_env_variables
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: archihub-${ENVIRONMENT_NAME}
  MONGO_HOST: ${MONGO_HOST}
  MONGO_PORT: '27017'

services:

# ---------------------- MONGO DATABASE SERVICE ----------------------
  archihub_mongodb_server_01:
    image: mongo:5.0.9
    ports:
      - "27017:27017"
    environment:
      <<: *mongo_db_env_variables
    volumes:
      - ./mongo_db/backup/:/data_restore/
      - ./mongo_db/backup_restore.sh:/docker-entrypoint-initdb.d/backup_restore.sh
      - ${DATA_PATH}/mongodb:/data/db
    networks:
      - archihub_mongo_network

# ------------------------- ARCHIHUB FLASK BACKEND -------------------
  archihub_flask_backend:
    build:
      context: ./backend
      args:
        - PORT=${BACKEND_PORT_FLASK}
    ports:
      - ${BACKEND_PORT_FLASK}:${BACKEND_PORT_FLASK}
    environment:
      <<: *backend_env_variables
    volumes:
      - ./stash/elastic_certs:/stash/elastic_certs:ro
      - ./stash/wait_for:/wait_for:ro
      - ${USERFILES_PATH}:/app/userfiles
      - ${WEBFILE_PATH}:/app/webfiles
      - ${UPLOAD_PATH}:/app/uploads
      - ${TEMPORAL_PATH}:/app/temporal
    depends_on:
      - archihub_mongodb_server_01
      - redis
    command: ["/bin/bash","/app/start.sh"]
    networks:
      - archihub_mongo_network
      - archihub_elastic_network

# ----------------------- CELERY WORKER SERVICE -----------------------
  celery_worker:
    build:
      context: ./backend
      args:
        - PORT=${BACKEND_PORT_FLASK}
    environment:
      <<: *worker_env_variables
    volumes:
      - ${USERFILES_PATH}:/app/userfiles
      - ${WEBFILE_PATH}:/app/webfiles
      - ${UPLOAD_PATH}:/app/uploads
      - ${TEMPORAL_PATH}:/app/temporal
    depends_on:
      - archihub_flask_backend
      - redis
    working_dir: /app
    command: 'celery --app app.celery_app worker --loglevel INFO'
    networks:
      - archihub_mongo_network
      - archihub_elastic_network

# ----------------------- CELERY QUEUE SERVICE -----------------------

  # celery_worker_2:
  #   build:
  #     context: ./backend
  #     args:
  #       - PORT=${BACKEND_PORT_FLASK}
  #   environment:
  #     <<: *worker_env_variables
  #   volumes:
  #     - "../userfiles:/app/userfiles"
  #     - "../webfiles:/app/webfiles"
  #     - "../original:/app/uploads"
  #     - "../temporal:/app/temporal"
  #   depends_on:
  #     - archihub_flask_backend
  #     - redis
  #   working_dir: /app
  #   command: 'celery --app app.celery_app worker -Q high,medium,low  --loglevel INFO'
  #   networks:
  #     - archihub_mongo_network
  #     - archihub_elastic_network


# ---------------------- ELASTICSEARCH SERVICE ----------------------
  archihub_elasticsearch:
    image: elasticsearch:7.17.6
    ports:
      - '9200:9200'
    environment:
      <<: *backend_env_variables
      "discovery.type": single-node
      "cluster.name": elasticsearch
      "xpack.license.self_generated.type": trial
      "node.name": ${ELASTIC_DOMAIN}
      "ES_JAVA_OPTS": "-Xms512m -Xmx512m"
      "http.cors.enabled": true
      "http.cors.allow-origin": "*"
      "ELASTIC_PASSWORD": ${ELASTIC_PASSWORD}
    volumes:
      - ../data/elastic:/usr/share/elasticsearch/data
    networks:
      - archihub_elastic_network
    healthcheck:
      test: curl -s https://localhost:$ELASTIC_PORT >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

# ---------------------- FRONT END SERVICE ----------------------
  archihub_frontend:
    build:
      context: ./frontend
      args:
        - FLASK_PORT=${BACKEND_PORT_FLASK}
    environment:
      - FLASK_PORT=${BACKEND_PORT_FLASK}
    ports:
      - "80:80"
    depends_on:
      - archihub_flask_backend

# ---------------------- REDIS SERVICE ----------------------
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - archihub_mongo_network
      - archihub_elastic_network

# ---------------------- NETWORKS LISTING ----------------------

networks:
  app-network:
    driver: bridge
  archihub_mongo_network:
    name: archihub_mongo_network
  archihub_elastic_network:
    name: archihub_elastic_network
  default:
    attachable: false