apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 1 # Número de réplicas que deseas
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongo
          image: mongo:5.0.9
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          ports:
            - containerPort: 27017
          envFrom:
            - configMapRef:
                name: mongo-configmap
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: MONGO_INITDB_ROOT_PASSWORD
          volumeMounts:
            # - name: mongo-backup
            #   mountPath: /data_restore
            # - name: mongo-backup-script
            #   mountPath: /docker-entrypoint-initdb.d/backup_restore.sh
            #   subPath: backup_restore.sh
            - name: mongo-data
              mountPath: /data/db
      volumes:
        # - name: mongo-backup
        #   hostPath:
        #     path: /ruta/en/el/host/a/mongo_db/backup
        #     type: Directory
        # - name: mongo-backup-script
        #   hostPath:
        #     path: /ruta/en/el/host/a/mongo_db/backup_restore.sh
        #     type: File
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc
